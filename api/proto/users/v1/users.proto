syntax="proto3";

package users.v1;

import "google/api/annotations.proto";
// import "google/protobuf/field_mask.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "tagger/tagger.proto";

// Defines the import path that should be used to import the generated package,
// and the package name.
option go_package = ".;pb";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0"
  }
  schemes: HTTP
  base_path: "/ms-users/api"
  consumes: "application/json"
  produces: "application/json"
  security_definitions: {
    security: {
      key: "X-User-Id"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "X-User-Id"
        description: "Authentication token, prefixed by Bearer word: Bearer <token>"
      }
    }
  }
  // security: {
  //   security_requirement: {
  //     key: "X-User-Id"
  //   }
  // }
};

service UserService {
  // Creates new user.
  //
  // For creating new user you have to provide:
  // - email;
  // - password;
  // ```json
  // {
  //   "name": "value"
  // }
  // ```
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "*"
    };
  }

  // Profile detail info.
  //
  // Profile returns user detail info.
  rpc Profile (ProfileRequest) returns (ProfileResponse) {
    option (google.api.http) = {
      get: "/v1/profile"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {security_requirement: {key: "X-User-Id"}}
    };
  }
}

message CreateUserRequest {
  string email      = 1 [(tagger.tags) = "validate:\"required,email\"" ];
  string password   = 2 [(tagger.tags) = "validate:\"required,min:8,max:50\"" ];
  string first_name = 3 [(tagger.tags) = "validate:\"required,min:3,max:20\"" ];
  string last_name  = 4 [(tagger.tags) = "validate:\"required,min:3,max:20\"" ];
}

message CreateUserResponse {
  string user_id    = 1;
}

message ProfileRequest {}

message ProfileResponse {
  string user_id    = 1;
  string email      = 2;
  string first_name = 3;
  string last_name  = 4;
}